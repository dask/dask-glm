name: CI

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types:
      - released
      - prereleased

jobs:
  test:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          python-version: ${{ matrix.python-version }}
          activate-environment: dask-glm

      - name: Install dask_glm
        shell: bash -l {0}
        run: pip install -e .

      - name: Run pytest
        shell: bash -l {0}
        run: |
          pip install pytest
          pytest dask_glm

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          python-version: ${{ matrix.python-version }}
          activate-environment: dask-glm

      - name: Build Source
        run: python setup.py sdist

      - name: Build Wheel
        run: python setup.py bdist_wheel

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/dask*

  upload_pypi:
    needs: 
      - test
      - build
    if: "startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}

